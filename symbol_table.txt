----------------------------------------
|	Tokens					Lexemes    |
----------------------------------------
	SINGLELINECOMMENT        //
	IDENTIFIER               for
	IDENTIFIER               the
	IDENTIFIER               sample
	KEYWORD                  out
	KEYWORD                  def
	IDENTIFIER               func
	LEFTROUNDBRACKET         (
	IDENTIFIER               a
	DELIMETER                ,
	IDENTIFIER               b
	RIGHTROUNDBRACKET        )
	LEFTCURLYBRACE           {
	KEYWORD                  return
	IDENTIFIER               a
	DIGIT                    +
	IDENTIFIER               b
	DELIMETER                ;
	RIGHTCURLYBRACE          }
	IDENTIFIER               _1_
	ASSIGN                   =
	DIGIT                    +3
	DELIMETER                ;
	IDENTIFIER               a_
	ASSIGN                   =
	FLOAT                    2.1
	DIVIDE                   /
	DIGIT                    100
	DELIMETER                ;
	KEYWORD                  out
	LEFTROUNDBRACKET         (
	IDENTIFIER               _1_
	ADD                      +
	DIGIT                    2
	IDENTIFIER               _
	ADD                      +
	QUOTATIONMARK            "
	IDENTIFIER               b
	QUOTATIONMARK            "
	RIGHTROUNDBRACKET        )
	DELIMETER                ;
	KEYWORD                  assuming
	LEFTROUNDBRACKET         (
	QUOTATIONMARK            "
	IDENTIFIER               a
	QUOTATIONMARK            "
	EQUAL                    ==
	DIGIT                    1
	RIGHTROUNDBRACKET        )
	LEFTCURLYBRACE           {
	KEYWORD                  out
	LEFTROUNDBRACKET         (
	IDENTIFIER               a_
	RIGHTROUNDBRACKET        )
	DELIMETER                ;
	RIGHTCURLYBRACE          }
	KEYWORD                  while
	LEFTROUNDBRACKET         (
	DIGIT                    1
	GREATERTHAN              >
	DIGIT                    2
	RIGHTROUNDBRACKET        )
	LEFTCURLYBRACE           {
	KEYWORD                  out
	LEFTROUNDBRACKET         (
	QUOTATIONMARK            "
	IDENTIFIER               hey
	QUOTATIONMARK            "
	RIGHTROUNDBRACKET        )
	DELIMETER                ;
	RIGHTCURLYBRACE          }
	IDENTIFIER               a_
	DELIMETER                .
	IDENTIFIER               sum
	LEFTROUNDBRACKET         (
	RIGHTROUNDBRACKET        )
	DELIMETER                ;
	IDENTIFIER               kelvin
	ASSIGN                   =
	LEFTROUNDBRACKET         (
	IDENTIFIER               fahrenheit
	DIGIT                    -
	DIGIT                    32
	RIGHTROUNDBRACKET        )
	MULTIPLY                 *
	DIGIT                    5
	DIVIDE                   /
	DIGIT                    9
	ADD                      +
	FLOAT                    273.15
	KEYWORD                  def
	IDENTIFIER               avogadro_law
	LEFTROUNDBRACKET         (
	IDENTIFIER               v1
	DELIMETER                ,
	IDENTIFIER               n1
	DELIMETER                ,
	IDENTIFIER               v2
	DELIMETER                ,
	IDENTIFIER               n2
	RIGHTROUNDBRACKET        )
	LEFTCURLYBRACE           {
	KEYWORD                  return
	LEFTROUNDBRACKET         (
	IDENTIFIER               v1
	DIVIDE                   /
	IDENTIFIER               n1
	RIGHTROUNDBRACKET        )
	EQUAL                    ==
	LEFTROUNDBRACKET         (
	IDENTIFIER               v2
	DIVIDE                   /
	IDENTIFIER               n2
	RIGHTROUNDBRACKET        )
	DELIMETER                ;
	RIGHTCURLYBRACE          }
	KEYWORD                  out
	LEFTROUNDBRACKET         (
	QUESTIONMARK             ?
	ALKALISYMBOLLITERAL      @H
	BALANCINGARROW           ==>
	NONMETALSYMBOLLITERAL    H
	QUESTIONMARK             ?
	RIGHTROUNDBRACKET        )
	DELIMETER                ;
	INVALID                  $
